int scp_get(ssh_session session, const char *remote_file, const char *local_file) {
    int rc;
    ssh_scp scp;
    int mode;
    char buffer[4096];
    size_t nbytes;

    // Open SCP session for reading from remote file
    scp = ssh_scp_new(session, SSH_SCP_READ, remote_file);
    if (scp == NULL) {
        return SSH_ERROR;
    }

    // Initialize SCP transfer
    rc = ssh_scp_init(scp);
    if (rc != SSH_OK) {
        ssh_scp_free(scp);
        return rc;
    }

    // Get file mode
    mode = ssh_scp_file_mode(scp);

    // Open local file for writing
    FILE *fp = fopen(local_file, "wb");
    if (fp == NULL) {
        ssh_scp_free(scp);
        return SSH_ERROR;
    }

    // Read from remote file and write to local file
    while (1) {
        nbytes = ssh_scp_read(scp, buffer, sizeof(buffer));
        if (nbytes == 0) {
            break;
        }
        fwrite(buffer, 1, nbytes, fp);
    }

    // Set file mode of local file
    chmod(local_file, mode);

    // Cleanup
    fclose(fp);
    ssh_scp_free(scp);
    return SSH_OK;
}


The changes made to the function include:

Replacing the file open mode from "w" (write) to "wb" (binary write) to handle binary files correctly.
Reading from the remote file using ssh_scp_read() to retrieve the file content, and writing the content to the local file using fwrite().
Removing the error handling code for SSH_ERROR, as it is unnecessary in this context.
I hope this updated code helps you copy the contents of the remote file correctly.







